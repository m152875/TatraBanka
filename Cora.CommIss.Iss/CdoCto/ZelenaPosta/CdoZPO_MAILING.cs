// Generated by NATeC ClassGenerator v. 4.2.2014.502
// Source model: D:\svnroot\proj\Portal_ISS\extra\2017.3.1\Analyzy a davky\Zelena posta\ZP.PDM
// Please do not edit this file - for custom additions to this class use a separate *$cust.cs file instead.
// Class Options: NOARCHIVE

using System;
using System.Data;
using Cora.Data.DBProvider;
using Cora.Natec.Base;

namespace Cora.CommIss.Iss
{
	/// <summary>
	/// Zásielky zelenej pošty (business trieda).
	/// </summary>
	[Serializable]
	public partial class CdoZPO_MAILING : clsDataObj
	{
		#region Properties

		/// <summary>
		/// Vráti alebo nastaví primárny kľúč.
		/// </summary>
		/// <value>Primárny kľúč.</value>
		public override long iPK
		{
			get
			{
				return _col_I_MAILING;
			}
			set
			{
				_col_I_MAILING = (int)value;
			}
		}

		/// <summary>
		/// Vráti alebo nastaví ID zásielky.
		/// </summary>
		/// <value>ID zásielky.</value>
		public int col_I_MAILING
		{
			get
			{
				return _col_I_MAILING;
			}
			set
			{
				_col_I_MAILING = value;
			}
		}

		/// <summary>
		/// Vráti alebo nastaví Identifikátor zelenej pošty.
		/// </summary>
		/// <value>Identifikátor zelenej pošty.</value>
		public string col_SLOT_ID
		{
			get
			{
				return _col_SLOT_ID;
			}
			set
			{
				_col_SLOT_ID = value;
			}
		}

		/// <summary>
		/// Vráti alebo nastaví Typ doručenia.
		/// </summary>
		/// <value>Typ doručenia; alebo <c>null</c>.</value>
		public string col_CORRESPONDENCE
		{
			get
			{
				return _col_CORRESPONDENCE;
			}
			set
			{
				_col_CORRESPONDENCE = value;
			}
		}

		#endregion

		#region Public Methods

		/// <summary>
		/// Načíta atribúty inštancie z dátového reader-a.
		/// </summary>
		/// <param name="oResult">Dátový reader. Názvy stĺpcov v reader-i musia zodpovedať názvom stĺpcov tabuľky.</param>
		/// <returns>Vždy <c>true</c>.</returns>
		public override void fillAttributes(IDataReader oResult)
		{
			_setAttrib(out _col_I_MAILING, oResult["I_MAILING"]);
			_setAttrib(out _col_SLOT_ID, oResult["SLOT_ID"]);
			_setAttrib(out _col_CORRESPONDENCE, oResult["CORRESPONDENCE"]);
		}

		/// <summary>
		/// Inicializuje inštanciu.
		/// </summary>
		public override bool Init()
		{
			base._classID = 316002000;
			sTabMain = "ZPO_MAILING";
			sTabs = "ZPO_MAILING";
			sColPK = "I_MAILING";
			sCols = "I_MAILING,SLOT_ID,CORRESPONDENCE";
			return true;
		}

		#endregion

		#region Protected Methods

		/// <summary>
		/// Pridá do DB príkazu viazaný parameter vytvorený z hodnoty primárneho kľúča.
		/// </summary>
		/// <param name="myCommand">Databázový príkaz, kam sa pridá vytvorený parameter.</param>
		/// <returns>Vytvorený a do príkazu pridaný viazaný parameter.</returns>
		protected override CoraParameter AddPkParam(CoraCommand myCommand)
		{
			CoraParameter parameterI_MAILING = new CoraParameter("@I_MAILING", DbType.Int32);
			parameterI_MAILING.Value = col_I_MAILING;
			myCommand.Parameters.Add(parameterI_MAILING);
			return parameterI_MAILING;
		}

		/// <summary>
		/// Pridá do DB príkazu viazané parametre vytvorené z hodnôt nie-primárnych stĺpcov.
		/// </summary>
		/// <param name="myCommand">Databázový príkaz, kam sa pridaju vytvorené parametre.</param>
		protected override void AddParams(CoraCommand myCommand)
		{
			CoraParameter parameterSLOT_ID = new CoraParameter("@SLOT_ID", DbType.String, 50);
			parameterSLOT_ID.Value = col_SLOT_ID;
			myCommand.Parameters.Add(parameterSLOT_ID);
			CoraParameter parameterCORRESPONDENCE = new CoraParameter("@CORRESPONDENCE", DbType.String, 200);
			parameterCORRESPONDENCE.Value = col_CORRESPONDENCE;
			myCommand.Parameters.Add(parameterCORRESPONDENCE);
		}

		#endregion

		private int _col_I_MAILING;
		private string _col_SLOT_ID;
		private string _col_CORRESPONDENCE;
	}
}