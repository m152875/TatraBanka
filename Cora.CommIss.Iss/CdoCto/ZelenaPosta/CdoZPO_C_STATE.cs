// Generated by NATeC ClassGenerator v. 4.2.2014.502
// Source model: D:\svnroot\proj\Portal_ISS\extra\2017.3.1\Analyzy a davky\Zelena posta\ZP.PDM
// Please do not edit this file - for custom additions to this class use a separate *$cust.cs file instead.
// Class Options: NOARCHIVE

using System;
using System.Data;
using Cora.Data.DBProvider;
using Cora.Natec.Base;

namespace Cora.CommIss.Iss
{
	/// <summary>
	/// Číselník stavov zelenej pošty (business trieda).
	/// </summary>
	[Serializable]
	public partial class CdoZPO_C_STATE : clsDataObj
	{
		#region Properties

		/// <summary>
		/// Vráti alebo nastaví primárny kľúč.
		/// </summary>
		/// <value>Primárny kľúč.</value>
		public override long iPK
		{
			get
			{
				return _col_I_STATE;
			}
			set
			{
				_col_I_STATE = (int)value;
			}
		}

		/// <summary>
		/// Vráti alebo nastaví ID stavu zásielky.
		/// </summary>
		/// <value>ID stavu zásielky.</value>
		public int col_I_STATE
		{
			get
			{
				return _col_I_STATE;
			}
			set
			{
				_col_I_STATE = value;
			}
		}

		/// <summary>
		/// Vráti alebo nastaví Kód.
		/// </summary>
		/// <value>Kód.</value>
		public string col_CODE
		{
			get
			{
				return _col_CODE;
			}
			set
			{
				_col_CODE = value;
			}
		}

		/// <summary>
		/// Vráti alebo nastaví Popis.
		/// </summary>
		/// <value>Popis.</value>
		public string col_DESCRIPTION
		{
			get
			{
				return _col_DESCRIPTION;
			}
			set
			{
				_col_DESCRIPTION = value;
			}
		}

		#endregion

		#region Public Methods

		/// <summary>
		/// Načíta atribúty inštancie z dátového reader-a.
		/// </summary>
		/// <param name="oResult">Dátový reader. Názvy stĺpcov v reader-i musia zodpovedať názvom stĺpcov tabuľky.</param>
		/// <returns>Vždy <c>true</c>.</returns>
		public override void fillAttributes(IDataReader oResult)
		{
			_setAttrib(out _col_I_STATE, oResult["I_STATE"]);
			_setAttrib(out _col_CODE, oResult["CODE"]);
			_setAttrib(out _col_DESCRIPTION, oResult["DESCRIPTION"]);
		}

		/// <summary>
		/// Inicializuje inštanciu.
		/// </summary>
		public override bool Init()
		{
			base._classID = 316001000;
			sTabMain = "ZPO_C_STATE";
			sTabs = "ZPO_C_STATE";
			sColPK = "I_STATE";
			sCols = "I_STATE,CODE,DESCRIPTION";
			return true;
		}

		#endregion

		#region Protected Methods

		/// <summary>
		/// Pridá do DB príkazu viazaný parameter vytvorený z hodnoty primárneho kľúča.
		/// </summary>
		/// <param name="myCommand">Databázový príkaz, kam sa pridá vytvorený parameter.</param>
		/// <returns>Vytvorený a do príkazu pridaný viazaný parameter.</returns>
		protected override CoraParameter AddPkParam(CoraCommand myCommand)
		{
			CoraParameter parameterI_STATE = new CoraParameter("@I_STATE", DbType.Int32);
			parameterI_STATE.Value = col_I_STATE;
			myCommand.Parameters.Add(parameterI_STATE);
			return parameterI_STATE;
		}

		/// <summary>
		/// Pridá do DB príkazu viazané parametre vytvorené z hodnôt nie-primárnych stĺpcov.
		/// </summary>
		/// <param name="myCommand">Databázový príkaz, kam sa pridaju vytvorené parametre.</param>
		protected override void AddParams(CoraCommand myCommand)
		{
			CoraParameter parameterCODE = new CoraParameter("@CODE", DbType.String, 20);
			parameterCODE.Value = col_CODE;
			myCommand.Parameters.Add(parameterCODE);
			CoraParameter parameterDESCRIPTION = new CoraParameter("@DESCRIPTION", DbType.String, 50);
			parameterDESCRIPTION.Value = col_DESCRIPTION;
			myCommand.Parameters.Add(parameterDESCRIPTION);
		}

		#endregion

		private int _col_I_STATE;
		private string _col_CODE;
		private string _col_DESCRIPTION;
	}
}